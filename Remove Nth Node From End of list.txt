/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int len = 0;
        ListNode* temp = head;
        while(temp){
            temp = temp -> next;
            len++;
        }
        if(n==len)return head->next;
       if(len==1 || len==0)return NULL;
        ListNode* prev = NULL;
        ListNode* curr = head;
        int cnt = 0;
        while(cnt < len){
            if(cnt == len - n){
                cout<<"Coming here with cnt"<<cnt<<endl;
                prev -> next = curr -> next;
                break;
            }
            prev = curr;
            curr = curr -> next;
            cnt++;
        }
        return head;
    }
};