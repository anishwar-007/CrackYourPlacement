class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size(), n = grid[0].size();
        vector<vector<int>> dp(m,vector<int>(n, -1));

        for(int i = 0 ; i < m ; i++ ){
            for(int j = 0; j < n ; j++ ){
                if(i==0 && j==0) dp[i][j] = grid[i][j];
                else{
                int down = 1e9;
                if( j > 0 ) down = dp[i][j-1];
                int left = 1e9;
                if( i > 0 ) left = dp[i-1][j];
                dp[i][j] = grid[i][j] + min( down , left );
                }
            }
        }
        return dp[m-1][n-1];
    }
};