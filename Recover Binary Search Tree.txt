/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
TreeNode* first;
TreeNode* second;
TreeNode* third;
TreeNode* prev;
public:

    void inorder(TreeNode* root){
        if(root == NULL) return;

        inorder(root->left);

        if(prev != NULL && (prev->val > root->val)){
            if(first == NULL){
                first = prev;
                second = root;
            }
            else{
                third = root;
            }
        }        
        prev = root;
        inorder(root->right);
    }
    void recoverTree(TreeNode* root) {
        first = second = third = NULL;
        prev = new TreeNode(INT_MIN);
        inorder(root);
        if(first && third) swap(first->val, third->val);
        else swap(first->val, second->val);
        return;
    }
};